:toc:
toc::[]

= Features

Every developer needs great tools to work efficient. Setting all this up manually can be tedious and error-prone. Further, different projects may require different versions and configurations of such tools. Especially configurations like code-formatters should be consistent within a project to avoid diff-wars.

The `devon-ide` will solve all these problems. Here are the features we can offer for you with `devon-ide`:

* *Efficient* +
Setup your IDE within minutes tailored for the requirements of your project.
* *Automated* +
Automate the setup and update, avoid manual steps and mistakes.
* *Simple* +
KISS (Keep It Small and Simple), no installers or tool-integrations that break with every release. Instead use archive-files (zip or tar.gz), templates and simple shell scripts.
* *Configurable* +
You can tweak the link:configuration.asciidoc[configuration] to your needs. Further the link:settings.asciidoc[settings] contain configuration templates for the different tools (see link:configurator.asciidoc[configurator]).
* *Maintainable* +
For your project you should copy these link:settings.asciidoc[settings] to an own `git` repository that can be maintained and updated to manage the tool configurations during the project lifecycle. If you use github or gitlab every developer can easily suggest changes and improvements to these link:settings.asciidoc[settings] via pull/merge requests without ending in chaos with big teams.
* *Customizable* +
You need an additional tool that we never heard of? Put it in the `software` folder of the link:structure.asciidoc[structure]. The `devon` link:cli.asciidoc[CLI] will then automatically add it to your `PATH` variable. +
Further you can create your own link:cli.asciidoc#commandlets[commandlet] for your additional tool. For closed-source tools you can create your own archive and distribute to your team members as long as you care about the terms and licenses of these tools.
* *Multi-tenancy* +
Have as many instances of the `devon-ide` "link:setup.asciidoc[installed]" on your machine for different projects with different tools, tool versions and configurations. No physical installation and no tweaking of your operating system. "Installations" of `devon-ide` do not interfere with each other nor with other installed software.
* *Multiple Workspaces* +
Support working with different link:workspaces.asciidoc[workspaces] on different branches. Create and update new workspaces with few clicks. See the workspace name in the title-bar of your IDE so you do not get confused and work on the right branch.
* *Free* +
The `devon-ide` is free just like everything from http://devonfw.com[devonfw]. See https://github.com/devonfw/devon-ide/blob/master/TERMS_OF_USE.adoc[TERMS_OF_USE] for details.

== IDEs
We support the following IDEs:

* link:eclipse.asciidoc[Eclipse]
* link:vscode.asciidoc[Visual Studio Code]
* link:intellij.asciidoc[IntelliJ]

== Platforms
We support the following platforms:

* link:java.asciidoc[java] (see also https://github.com/devonfw/devon4j/wiki[devon4j])
* link:cs.asciidoc[C#] (see https://devon4net.github.io/[devon4net])
* link:node.asciidoc[node].js and link:ng.asciidoc[angular] (see https://github.com/devonfw/devon4ng/wiki[devon4ng])

== Build-Systems
We support the following build-systems:

* link:mvn.asciidoc[mvn] (maven)
* link:npm.asciidoc[npm]
* link:gradle.asciidoc[gradle]

However, also other IDEs, platforms, or tools can be easily integrated as link:cli.asciidoc#commandlet[commandlet]. 

== Motiviation

`TL;DR`? Lets talk to developers in the proper language. Here are examples with `devon-ide`:

[source,bash]
--------
[/]$ devon
You are not inside a devon IDE installation: /
[/]$ cd /projects/devon
[devon]$ mvn
zsh: command not found: mvn
[devon]$ devon
devon-ide has environment variables have been set for /projects/devon
[devon]$ mvn -v
Apache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-24T20:41:47+02:00)
Maven home: /projects/devon/software/maven
Java version: 1.8.0_191, vendor: Oracle Corporation, runtime: /projects/devon/software/java
Default locale: en_DE, platform encoding: UTF-8
OS name: "mac os x", version: "10.14.3", arch: "x86_64", family: "mac"
[devon]$ cd /projects/ide-test/workspaces/test/my-project
[my-project]$ devon
devon-ide has environment variables have been set for /projects/ide-test
[my-project]$ mvn -v
Apache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-24T20:41:47+02:00)
Maven home: /projects/ide-test/software/maven
Java version: 11.0.2, vendor: Oracle Corporation, runtime: /projects/ide-test/software/jdk/Contents/Home
Default locale: en_DE, platform encoding: UTF-8
OS name: "mac os x", version: "10.14.3", arch: "x86_64", family: "mac"
[ide-test]$ devon eclipse
launching Eclipse for workspace test...
[my-project]$ devon build
[INFO] Scanning for projects...
...
[INFO] BUILD SUCCESS
--------

This was just a very simple demo of what `devon-ide` can do. For further details have a look at our link:cli.asciidoc[CLI documentation].

Now you might ask:

* But I use Windows/Linux/MacOS/...? - works on all platforms!
* But how about Windows CMD or Power-Shell? - works!
* But what if I use cygwin or git-bash on windows? - works!
* But I love to use ConEmu or Commander? - works with full integration!
* How about MacOS Terminal or iTerm2? - works with full integration!
* But I use zsh? - works!
* ...? - works!

Wow! So lets get started with link:setup.asciidoc[download & setup].