:toc:
toc::[]

= software

The `software` folder contains the third party tools for your IDE such as link:mvn.asciidoc[maven], link:npm.asciidoc[npm], link:java.asciidoc[java], etc. With respect to the link:license.asciidoc[licensing terms] you may create a custom archive containing a `devon-ide` together with the required software. However, to be platform indepentent and allow lightweight updates the `devon-ide` is capable to download and link:install.asciidoc[install] the software automatically for you.

== Repository

By default software is downloaded via the internet from public download URLs of the according tools. However, some projects may need specific tools or tool versions that are not publically available.
In such case, they can create their own software repository (e.g. in a VPN) and link:configuration.asciidoc[configure] the base URL of it via `DEVON_SOFTWARE_REPOSITORY` link:variables.asciidoc[variable].
Then `devon-ide` will download all software from this repository only instead of the default public download URLs.
This repository (URL) should be accessible within your network via HTTPS (or HTTP) and without any authentication.
The repository needs to have the following structure:
```
${DEVON_SOFTWARE_REPOSITORY}/«tool»/«version»/«tool»-«version»-«os».tar.gz
```
So for every tool `«tool»` (link:java.asciidoc[java], link:mvn.asciidoc[maven], link:vscode.asciidoc[vscode], link:eclipse.asciidoc[eclipse], etc.) you need to provide a folder in your repository.
Within this folder for every supported version `«version»` you need a subfolder.
This subfolder needs to contain the tool in that version for every operating system `«os»` (`windows`, `linux`, or `mac`).

== Shared

By default each installation of devon-ide has its own physical installations of the required tools in the desired versions stored in its local `software` folder.
While this is great for isolation of devon-ide installations and to prevent side-effects, it can cause a huge waste of disc resources in case you are having many installations of devon-ide. If you are a power-user of devon-ide with more then 10 or even up to hundreds of installations on your machine, you might love to share installations of a software tool in a particular version between multiple devon-ide installations.
In order to do so, you only need to link:configuration.asciidoc[configure] the variable `DEVON_SOFTWARE_PATH` in your `~/devon.properties` pointing to an existing directory on your disc (e.g. `/projects/software` or `C:\projects\software`). Then devon-ide will install required software into `${DEVON_SOFTWARE_PATH}/${software_name}/${software_version}` as needed and create a symbolic link to it in `${DEVON_IDE_HOME}/software/${software_name}`. 

As a benefit another devon-ide installation will using the same software with the same version can re-use the existing installation and only needs to create the symbolic link. No more waste of having many identical JDK installations on your disc.

As a drawback you need to be aware that specific tools may be "manipulated" after installation. The most common case is that a tool allows to install plugins or extensions such as all IDEs do. Such "manipulations" will cause side-effects between the different devon-ide installations sharing the same version of that tool. While this can also be a benefit it may also cause trouble. If you have a sensitive project that should not be affected by such side-effects, you may again override the `DEVON_SOFTWARE_PATH` variable to the empty value in your `${DEVON_IDE_HOME}/conf/devon.properties` of that sensitive installation:
```
DEVON_SOFTWARE_PATH=
```
This will disable this feature particulary for that specific sensitive devon-ide installation but let you use it for all other ones.