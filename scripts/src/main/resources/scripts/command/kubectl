#!/usr/bin/env bash

# autocompletion list
if [ "${1}" = "shortlist" ]
then
  if [ -z "${2}" ]
  then
    echo "setup help"
  fi
  exit
fi

if [ -n "${DEVON_IDE_TRACE}" ]; then set -vx; fi
# shellcheck source=scripts/functions
source "$(dirname "${0}")"/../functions

# $1: optional setup
function doSetup() {
  if doIsKubernetesInstalled
  then
    if [ "${1}" = "setup" ]
    then
      doEcho "Kubernetes is already installed at $(command -v kubectl)"
      kubectl version
    fi
    return
  fi
  if doIsWindows
  then
    doRequireWsl
    # Check if Kubernetes is already installed on WSL
    if doIsKubernetesInstalledOnWsl
    then
      if [ "${1}" = "setup" ]
      then
        echo Kubernetes is already installed on WSL and ready to use. devonfw-ide did not make any changes.
        wsl kubectl version
      fi
    else
      doRequireNotBatch
      doEcho "Installing Kubernetes on WSL..."
      # Install Kubernetes on WSL
      doRunCommand "wsl bash ../scripts/setup-kubernetes"
    fi
  elif doIsMacOs
  then
    doDevonCommand docker -q setup
    read -r -p "In order to activate kubernetes, open Docker Desktop and enable kubernetes. For details see https://docs.docker.com/desktop/kubernetes/#enable-kubernetes - Press enter when you have enabled kubernetes." answer
  else
    doFail "Sorry, kubernetes-installation support is not yet implemented for your OS. Please install manually or help devonfw-ide to support it for your OS by contributing a pull-request."
  fi
}


# Call Kubernetes with specified arguments
function doRun() {
  doSetup
  # Run Kubernetes command if installed on Windows.
  if doIsKubernetesInstalled
  then
    doEcho "Running: kubectl ${*}"
    kubectl "${@}"
  # Run Kubernetes command on WSL if installed on WSL.
  elif doIsWindows
  then
    doEcho "Running: kubectl ${*} on WSL."
    wsl kubectl "${@}"
  else
    doFail "Kubernetes (kubectl) could not be found."
  fi
}

# OS independent check if Kubernetes is installed.
function doIsKubernetesInstalled() {
  if command -v kubectl &> /dev/null
  then
    return
  else
    return 255
  fi
}

# CLI
case ${1} in 
"help" | "-h")
  echo "Setup Kubernetes."
  echo
  echo "Arguments:"
  echo " setup                    setup Kubernetes on your machine (global installation)."
  echo " «args»                   call Kubernetes with the specified arguments. Call kubernetes help for details or use Kubernetes(kubectl) directly as preferred."
  echo  
;;
"setup" | "s" | "")
  doSetup setup
;;
*)
   doRun "${@}"
;;
esac