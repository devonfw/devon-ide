#!/usr/bin/env bash
source "$(dirname "${0}")"/../functions

# $1: optional setup
function doSetup() {
  if [ -z "${JAVA_HOME}" ]
  then
    export JAVA_HOME="${DEVON_IDE_HOME}/software/java"
    echo "JAVA_HOME is not set, assuming ${JAVA_HOME}"
  fi
  if [ -n "${1}" ] || [ ! -d "${JAVA_HOME}" ]
  then
    local software_version="${JAVA_VERSION:-11.0.2}"
    local download_url="https://download.java.net/java/GA/jdk${software_version/\.*/}/9/GPL/openjdk-${software_version}"
    local software_dir="${JAVA_HOME}"
    if doIsMacOs
    then
      software_dir="${DEVON_IDE_HOME}/software/jdk"
      download_url="${download_url}_osx-x64_bin.tar.gz"
    elif doIsWindows
    then
      download_url="${download_url}_windows-x64_bin.zip"
    else
      download_url="${download_url}_linux-x64_bin.tar.gz"
    fi
    doInstall "${software_dir}" "${download_url}" "java" "${software_version}"
    if [ "${?}" = 0 ]
    then
      if [ "${software_dir}" = "${DEVON_IDE_HOME}/software/jdk" ]
      then
        if [ ! -d "${JAVA_HOME}" ]
        then
          echo "Creating symlink as workaround for Java on MacOS"
          doRunCommand "ln -s 'jdk/Contents/Home' '${JAVA_HOME}'"
        fi
        doExtendPath "${JAVA_HOME}"
      fi
    fi
  fi
  if [ -n "${1}" ]
  then
    doRunCommand "'${JAVA_HOME}/bin/java' -version" "verify installation of Java"
  fi
}

#$@ args (see help)
function doMigrate() {
  doRunConfigurator com.devonfw.tools.ide.migrator.Migrator ${@}
}

# CLI
if [ "${1}" = "-h" ] || [ "${1}" = "help" ]
then
  echo "Install and manage Java."
  echo
  echo "Arguments:"
  echo " setup                              setup Java (install and verify)"
  echo " create «args»                      create new Java project based on devon4j template. If a single argument is provided,"
  echo "                                    this is the package name and is automatically split into groupId and artifactId."
  echo " migrate [from «version»] [single]  update the current devon4j project to the latest supported version. If for some reasons"
  echo "                                    the current devonfw version (e.g. oasp4j:2.6.0) can not be auto-detected you may provide"
  echo "                                    it manually after the 'from' argument. Also the 'single' option allows to migrate only to"
  echo "                                    the next available version."
  echo
  echo "Options:"
elif [ -z "${1}" ] || [ "${1}" = "setup" ]
then
  doSetup setup
elif [ "${1}" = "create" ]
then
  doSetup
  shift
  doMavenArchetype ${@}
elif [ "${1}" = "migrate" ]
then
  shift
  doMigrate ${@}
else
  doFail "Unknown argument ${1}"
fi
