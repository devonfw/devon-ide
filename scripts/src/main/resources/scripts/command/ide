#!/bin/bash
cd `dirname $0`
cd ../..
source scripts/functions
DEVON_IDE_REPO_URL="https://repo.maven.apache.org/maven2/com/devonfw/tools/ide"

function doUpdateScripts() {
  doUpgradeMavenArtifact "${DEVON_IDE_HOME}" "${DEVON_IDE_REPO_URL}" "devon-ide-settings" "${target_version}" ".tar.gz" "${devon_ide_version}"
}

function doUpdateSettings() {
  if [ ! -d "${SETTINGS_PATH}" ]
  then
    if [ -n "${1}"]
    then
      SETTINGS_URL="${1}"
    fi    
    if [ -z "${SETTINGS_URL}" ]
    then
      echo "*** ATTENTION ***"
      echo "Missing your settings at ${SETTINGS_PATH} and no SETTINGS_URL is defined."
      echo "Further details can be found here:"
      echo "https://github.com/devonfw/devon-ide/wiki/settings"
      echo "Please contact the technical lead of your project to get the SETTINGS_URL for your project."
      echo "In case you just want to test devon-ide you may simply hit return to install default settings."
      echo
      read -p "Settings URL: " answer
      if [ -z "${answer}" ]
      then
        SETTINGS_URL="${DEVON_IDE_REPO_URL}/devon-ide-settings"
        doUpgradeMavenArtifact "${SETTINGS_PATH}" "${DEVON_IDE_REPO_URL}" "devon-ide-settings" "${target_version}" ".zip"
      else
        SETTINGS_URL="${answer}"
        doInstall "${SETTINGS_PATH}" "${SETTINGS_URL}"
      fi
    else
      doInstall "${SETTINGS_PATH}" "${SETTINGS_URL}"
    fi
    if [ ! -d "${SETTINGS_PATH}" ]
    then
      doFail "Installation of settings failed!"
    fi
    if [ ! -d "${SETTINGS_PATH}/.git" ]
    then
      cd "${SETTINGS_PATH}"
      git init
      git add .
      git commit -m "Initial settings downloaded from ${SETTINGS_URL}"
      cd -
    fi
  else
    doUpgradeMavenArtifact "${SETTINGS_PATH}" "${DEVON_IDE_REPO_URL}" "devon-ide-settings" "${target_version}" ".zip"
  fi
}

function doSetup() {
  doUpdateSettings ${@}
  if [ -z "${DEVON_IDE_TOOLS}" ]
  then
    doFail "Variable DEVON_IDE_TOOLS is undefined. Please check your configuration (devon.properties)."
  fi
  for tool in "${DEVON_IDE_TOOLS[@]}"
  do
    echo
    echo "*** Setting up ${tool} ***"
    doDevonCommand ${tool} setup
  done
}

target_version="LATEST"

# CLI
if [ "${1}" = "-h" ] || [ "${1}" = "help" ]
then
  echo "Setup and update devon-ide."
  echo
  echo "Arguments:"
  echo "setup                            setup devon-ide"
  echo "update                           check for updates and install if newer version is available"
  echo "update «package» [to «version»]  update (or downgrade) specified package (to specified version)"
  echo "                                 packages are e.g. 'scripts' or 'settings'"
  exit
elif [ "${1}" = "setup" ]
then
  shift
  doSetup ${@}
elif [ "${1}" = "update" ]
then
  if [ -z "${2}" ]
  then
    doUpdateScripts
    doUpdateSettings
  else
    if [ "${3}" = "to" ]
    then
      if [ -z "${4}" ]
      then
        doFail "Missing version argument!\ndevon ide update to «version»"
      fi
      target_version="${4}"
    elif [ -n "${3}" ]
    then
      doFail "Undefined update argument ${3}!"
    fi
    if [ "${2}" = "scripts" ]
    then
      doUpdateScripts
    elif [ "${2}" = "settings" ]
    then
      doUpdateSettings
    else
      doFail "Undefined package ${2}"
    fi
  fi
  exit
elif [ -z "${1}" ]
then
  doFail "Unknown argument: ${1}"
else
  doFail "Missing arguments. Call 'devon help ide' to get help."
fi
echo
echo "Completed $@"
