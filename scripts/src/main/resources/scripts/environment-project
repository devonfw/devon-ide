#!/bin/bash
# Script to setup devon-ide environment. Will actually be sourced,
# hash bang only for filetype detection and editor syntax support

export DEVON_IDE_HOME=${PWD}

# load and setup configuration
source "${DEVON_IDE_HOME}/scripts/variables"
if [ -f "${DEVON_IDE_HOME}/variables" ]
then
  source "${DEVON_IDE_HOME}/variables"
fi
# copy defaults
if [ ! -d "${DEVON_IDE_HOME}/conf" ]
then
  mkdir "${DEVON_IDE_HOME}/conf"
fi
if [ -d "${SETTINGS_PATH}" ]
then
  if [ -f "${SETTINGS_PATH}/devon/variables" ]
  then
    source "${SETTINGS_PATH}/devon/variables"
  else
    echo
    echo "*** ATTENTION ***"
    echo "Your devon-ide settings at ${SETTINGS_PATH} are missing project-specific variables."
    echo "Please create this file at ${SETTINGS_PATH}/devon/variables"
    echo "You can get a template from here:"
    echo "https://github.com/devonfw/devon-ide/blob/master/settings/src/main/settings/devon/variables"
  fi
  if [ ! -f "${DEVON_IDE_HOME}/conf/variables" ]
  then
    if [ -f "${SETTINGS_PATH}/devon/conf/variables" ]
    then
      cp "${SETTINGS_PATH}/devon/conf/variables" "${DEVON_IDE_HOME}/conf/"
    else
      echo
      echo "*** ATTENTION ***"
      echo "Your devon-ide settings at ${SETTINGS_PATH} are missing a variables template."
      echo "Please create this file at ${SETTINGS_PATH}/devon/conf/variables"
      echo "You can get a template from here:"
      echo "https://github.com/devonfw/devon-ide/blob/master/settings/src/main/settings/devon/conf/variables"
    fi
  fi
else if [ "${1}" != "ide" ] || [ "${2}" != "setup" ]
  echo
  echo "*** ATTENTION ***"
  echo "Your devon-ide is missing the settings at ${SETTINGS_PATH}"
  echo "Please run the following command to complete your IDE setup:"
  echo "devon ide setup [«settings-url»]"
fi
if [ -z "${WORKSPACE}" ]
then
  export WORKSPACE=main
fi
export WORKSPACE_PATH=${DEVON_IDE_HOME}/workspaces/${WORKSPACE}
if [ ! -d "${WORKSPACE_PATH}" ]
then
  if [ "${WORKSPACE}" = "main" ]
  then
    echo "Creating main workspace directory"
    mkdir -p "${WORKSPACE_PATH}"
  else
    echo "WARNING: Worksapce ${WORKSPACE} does not exist"
  fi
fi

if [ -z "${DEVON_OLD_PATH}" ]
then
  export DEVON_OLD_PATH="${PATH}"
else
  PATH="${DEVON_OLD_PATH}"
fi
# Setup path
SOFTWARE_PATH=${DEVON_IDE_HOME}/software
if [ -d "${SOFTWARE_PATH}" ]
then
  for SOFTWARE_FOLDER in ${SOFTWARE_PATH}/*
  do
    if [ -d "${SOFTWARE_FOLDER}/bin" ]
    then
      PATH="${SOFTWARE_FOLDER}/bin:${PATH}"
    else
      PATH="${SOFTWARE_FOLDER}:${PATH}"
    fi
    # Load custom configuration of software
    if [ -e "${SOFTWARE_FOLDER}/ide-config" ]
    then
      source "${SOFTWARE_FOLDER}/ide-config"
    fi
  done
else
  if [ "${1}" != "ide" ] || [ "${2}" != "setup" ]
  then
    echo
    echo "*** ATTENTION ***"
    echo "Your devon-ide is missing the software at ${SOFTWARE_PATH}"
    echo "Please run the following command to complete your IDE setup:"
    echo "devon ide setup [«settings-url»]"
  fi
fi

# node.js support
if [ -d "${DEVON_IDE_HOME}/software/nodejs" ]
then
  PATH=${PATH}:`npm bin -g 2> /dev/null`
fi

# load user settings late so variables like M2_REPO can be overriden
if [ -f "${DEVON_IDE_HOME}/conf/variables" ]
then
  source "${DEVON_IDE_HOME}/conf/variables"
fi

export PATH
